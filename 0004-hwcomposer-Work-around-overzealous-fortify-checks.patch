From f6367ed3cd3155c29d247387755b98239d13f987 Mon Sep 17 00:00:00 2001
From: Tim Kryger <tkryger@google.com>
Date: Fri, 30 Mar 2018 14:40:39 -0700
Subject: [PATCH 4/4] hwcomposer: Work around overzealous fortify checks

Storage for six pollfd structs is allocated on the stack in a 2d array.
Subsequently, the address of the first element is passed to poll along
with the same total number of fds.  At this point, the fortify dynamic
checker, considering only one of the dimensions of the array, throws an
error and warns that array is too small.  Since the array is actually
sized appropriately, use a reinterpret_cast to subvert the checker.

Bug: 77323983
Change-Id: Ib88c5a00bc84b3d05be95baf57df5f522a769da4
---
 libhwcomposer/hwc_vsync.cpp | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/libhwcomposer/hwc_vsync.cpp b/libhwcomposer/hwc_vsync.cpp
index 0edeb0410..094fbf013 100644
--- a/libhwcomposer/hwc_vsync.cpp
+++ b/libhwcomposer/hwc_vsync.cpp
@@ -172,7 +172,8 @@ static void *vsync_loop(void *param)
 
     if (LIKELY(!ctx->vstate.fakevsync)) {
         do {
-            int err = poll(*pfd, (int)(num_displays * num_events), -1);
+            int err = poll(reinterpret_cast<struct pollfd *>(pfd),
+                           (int)(num_displays * num_events), -1);
             if(err > 0) {
                 for (int dpy = HWC_DISPLAY_PRIMARY; dpy < num_displays; dpy++) {
                     for(size_t ev = 0; ev < num_events; ev++) {
-- 
2.19.0

